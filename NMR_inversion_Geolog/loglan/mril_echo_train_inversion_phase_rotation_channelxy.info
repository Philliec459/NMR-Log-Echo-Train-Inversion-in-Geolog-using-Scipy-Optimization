# spec : 
LANGUAGE = PYTHON
DESCRIPTION_DETAIL = "\# NMR Echo Train processing and creation of an NMR log in Real-Time\:\n\nThis Jupyter Notebook uses the existing MRIL T2 bin porosities to create an NMR log echo train with random noise that is then used to test one of our 3 SciPy metods for T2 inversion. \n\nThe T2 inversion methods developed in this notebook were developed with collaboration with chatGPT. We wanted to experiment with this AI tool to see if we could create the code to perform NMR log T2 inversion. We are using SciPy least_squares, optimization and curve_fit libraries in Python with Tikhonov regularization, which incorporates a penalty term based on the sum of the squared parameters. Although the initial code provided by ChatGPT required some fine-tuning, it was a great starting point.\n\nOur [repository on GitHub](https\://github.com/Philliec459/NMR-Log-Echo-Train-Inversion-in-Geolog-using-Scipy-Optimization) also includes a complete Geolog project with Geolog python loglans to perform the same process as used in this notebook.\n\nThe process starts with creating an echo train with random noise from the existing bin porosities from a MRIL C tool job using the multi-exponential decay rate defined by the function below\:\n\n    def func(x,p1,p2,p3,p4,p5,p6,p7,p8)\:\n    return (p1*np.exp(-x/4)+p2*np.exp(-x/8)+p3*np.exp(-x/16)+p4*np.exp(-x/32)+p5*np.exp(-x/64)+p6*np.exp(-x/128)+p7*np.exp(-x/256)+p8*np.exp(-x/512))\n\n\nThe time axis, xdata, is in msec for 200 echoes with a TE of 1.2 msec\:\n\n    \# create x array with 200 elements\n    num_echoes \= 200\n    TE \= 1.2  \# echo spacing (ms)\n    x \= np.arange(num_echoes) * TE\n    xdata \= x\n\nWe add random noise to this echo train using the code below\: \n\n    y_noise  \= noise * np.random.normal(size\=xdata.size)\n    ydata \= y + y_noise\n\nWe then apply our T2 inversion using this synthetic echo train with noise employing one of the 3 methods from SciPy shown below\: \n\n    '''\n    -----------------------------------------------------------------------------------------------\n      T2 Inversion using SciPy with regularization or SciPy curve_fit options\:\n    -----------------------------------------------------------------------------------------------\n    '''\n \n    if method \=\= 'least_squares' \: \n        \# Set the value of alpha\n        alpha \= 0.1\n        \# Set the initial parameter values\n        p0 \= np.ones(8)\n        \# Set the bounds\n        bounds \= ([0]*8, [20]*8)\n        \# Fit the data to the function with L2 regularization using scipy.optimize\n        result \= least_squares(objective, p0, args\=(xdata, ystack, alpha), bounds\=bounds)\n        popt \= result.x    \n    elif method \=\= 'Optimize'\:\n        lambda_ \= 0.1  \#started with 0.1\n        p0 \= np.ones(8)\n        result \= minimize(obj_func, p0, args\=(xdata, ystack, lambda_), method\='L-BFGS-B', bounds\=[(0, 20)]*8)\n        popt \= result.x\n    elif method \=\= 'Curve_fit_simple' \: \n        popt, pcov \= curve_fit(func, xdata, ystack, method\='trf', bounds\=(0.05, [20, 20, 20, 20, 20, 20, 20, 20])) \n        \n![NMR_log](NMR_log.gif)\n\n\n\#\#\# Channel X and Y Data\nIn an attempt to make this more realistic, we created our own Channel X and Channel Y data from the original echo train (ydata) using our pre-defined phase rotation values in radians to calculate the X and Y data. We then again use phase rotation correction to create a phase corrected echo train for the T2 inversion similar to what we might do with the channel echo train data on a typical MRIL run well using the following code\:\n\n\#\#\# Calculate a pseudo X and Y channle data bassed on the phase_angle_radian and the origial echo train ydata\n\n\#\#\#\# [We are using phase angles in radians](https\://en.wikipedia.org/wiki/Radian).\n    \n![Geolog](radians.gif)  \n\n\nRotate the initial echo train to create X and Y component data\:\n\n    Channel_X \= ydata * np.cos(phase_angle_rad) \# Echo train real\n    Channel_Y \= ydata * np.sin(phase_angle_rad)  \# Quadrature channel\n\nand then re-apply the phase rotation to create a new echo train for the T2 inversion\:\n\n    echo_train_real \= np.real(Channel_X) / np.cos(phase_angle_rad)\n    echo_train_imag \= np.imag(Channel_Y) / np.sin(phase_angle_rad)\n\n\n![T2_inversion_phase](T2_inversion_phase.gif)\n\nPrior to T2 inversion, we typically stack the echo_train_real for better signal to noise, and then apply one of the 3 SciPy inversion techniques as shown above. \n\nWe also have all of this code as [Geolog python loglans with a complete Geolog project included in our GitHub repository](https\://github.com/Philliec459/NMR-Log-Echo-Train-Inversion-in-Geolog-using-Scipy-Optimization).\n\n![Geolog_Image](Geolog_loglan.png)\n\nIn this project there is a Geolog layout to view the new T2 inversion results along with the original NMR log data to compare the results.\n\n![Geolog_Image](results.png)\n\nPlease let us know if there are any issues.\n"
MODE:  ARG:            VAR:            TYPE:         REPEAT: DEFAULT:        VALIDATION:                             LOCATION: UNIT:    VISIBLE: TAB_LABEL: COMMENT=
#====  ====            ====            =====         ======= ========        ===========                             ========= =====    ======== ========== ========                                        
INPUT  FILE_IN         file_in         FILE          ""      ""              ""                                      ""        ""       TRUE     ""         "Input table (pipe)."
INPUT  FILE_OUT        file_out        FILE          ""      ""              ""                                      ""        ""       TRUE     ""         "Output table (pipe)."
INPUT  SET_IN          set_in          ALPHA         ""      WIRE            ""                                      PARAMETER ALPHA    TRUE     ""         "Set In"
INPUT  SET_OUT         set_out         ALPHA         ""      MRIL_OUT        ""                                      PARAMETER ALPHA    TRUE     ""         "Set Out"
INPUT  LEVEL_SPACING   level_spacing   REAL          ""      0.5             ""                                      PARAMETER FEET     TRUE     ""         "Level Spacing desired"
INPUT  NUM_ECHOES      num_echoes      REAL          ""      200             ""                                      PARAMETER ""       TRUE     ""         "Number of Echoes in Echo Train"
INPUT  TE              te              REAL          ""      1.2             ""                                      PARAMETER MSEC     TRUE     ""         "TE of Echo Train"
INPUT  NOISE_LEVEL     noise_level     REAL          ""      2               ""                                      PARAMETER ""       TRUE     ""         "Noise wanted for Echo Train"
INPUT  STACK_LEVELS    stack_levels    INT           ""      3               ""                                      PARAMETER ""       TRUE     ""         "Levels of Echo Trains to stack"
INPUT  METHOD          method          ALPHA*16      ""      least_squares   least_squares,Optimize,Curve_fit_simple PARAMETER ALPHA*16 TRUE     ""         "Method of Fitting Echo Train for T2 Inversion"
INPUT  ALPHA           alpha           REAL          ""      .02             ""                                      PARAMETER ""       TRUE     ""         "Alpha \= 0, no regularization"
OUTPUT PHASE_ANGLE_RAD phase_angle_rad NAME_REAL     ""      PHASE_ANGLE_RAD ""                                      CONSTANT  ""       TRUE     ""         "Phase Angle in Radians"
OUTPUT PHASE_ANGLE_DEG phase_angle_deg NAME_REAL     ""      PHASE_ANGLE_DEG ""                                      CONSTANT  ""       TRUE     ""         "Phase Angle in Degrees"
INPUT  DEPTH           depth           NAME_REAL     ""      DEPTH           ""                                      LOG       FEET     TRUE     ""         "Downhole depth"
INPUT  P1              p1              NAME_REAL     ""      P1              ""                                      LOG       PU       TRUE     ""         "MRIL Bin 1 at 4ms"
INPUT  P2              p2              NAME_REAL     ""      P2              ""                                      LOG       PU       TRUE     ""         "MRIL Bin 2 at 8ms"
INPUT  P3              p3              NAME_REAL     ""      P3              ""                                      LOG       PU       TRUE     ""         "MRIL Bin 3 at 16ms"
INPUT  P4              p4              NAME_REAL     ""      P4              ""                                      LOG       PU       TRUE     ""         "MRIL Bin 4 at 32ms"
INPUT  P5              p5              NAME_REAL     ""      P5              ""                                      LOG       PU       TRUE     ""         "MRIL Bin 5 at 64ms"
INPUT  P6              p6              NAME_REAL     ""      P6              ""                                      LOG       PU       TRUE     ""         "MRIL Bin 6 at 128ms"
INPUT  P7              p7              NAME_REAL     ""      P7              ""                                      LOG       PU       TRUE     ""         "MRIL Bin 7 at 256ms"
INPUT  P8              p8              NAME_REAL     ""      P8              ""                                      LOG       PU       TRUE     ""         "MRIL Bin 8 at 512ms"
OUTPUT MBVI            mbvi            NAME_REAL     ""      MBVI            ""                                      LOG       PU       TRUE     ""         "MRIL Bulk volume irreducible"
OUTPUT MFFI            mffi            NAME_REAL     ""      MFFI            ""                                      LOG       PU       TRUE     ""         "Total free fluid index"
OUTPUT MPHI            mphi            NAME_REAL     ""      MPHI            ""                                      LOG       PU       TRUE     ""         "MRI Effective Porosity"
OUTPUT ECHO_OUT        echo_out        NAME_REAL*200 ""      ECHO            ""                                      LOG       ""       TRUE     ""         "Stacked Echo Train Amplitude Phase Corrected"
OUTPUT FIT             fit             NAME_REAL*200 ""      FIT             ""                                      LOG       ""       TRUE     ""         "Fit to stacked Echo Train"
OUTPUT OPTBINS         optbins         NAME_REAL*10  ""      T2              ""                                      LOG       MSEC     TRUE     ""         "T2 Distribution"
